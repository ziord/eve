struct Bar {
    @declare pi => 22/7;
    @declare print => fn (arg) { show arg; return Bar::pi; };
    @compose push, pop, pin;
}

let x = Bar { push = "deadly", pop = fn() {return 5;}, pin = Bar };
show x;
assert x;
show x.push;
assert x.push == "deadly";
assert x.pop() == 5;
assert x.pin::pi == Bar::pi;
assert x.pin::print(3) == Bar::pi;

let y = Bar {};
assert y;
assert x != y;
show y.pin, y.push, y.pop;
assert y.pin == None;
assert y.push == None;
assert y.pop == None;

x.pin = 5;
assert x.pin == 5;
assert x.pin != y.pin;

x.pin *= 4;
assert x.pin == 20;

x.pin >>= 1;
assert x.pin == 10;

y.pin = x;
assert y.pin;
assert y.pin.pin == 10;


let dict = #{y.pin: Bar};
assert dict[y.pin] == Bar;
assert dict[y.pin]::pi == 22/7;
